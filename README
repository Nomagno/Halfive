HALFIVE, THE UNIVERSAL RACING GAME

Halfive is a stateless protocol for racing games, and with a bit more work any 2D game that needs to be accessible, lightweight, and work under heavy/total packet loss.

It has no implementation requirements whatsoever.

There is a modular no-dependency implementation of a racing game that adheres to Halfive.
'include' folder: Interfaces
'src' folder: Implementations
It has a lot of C utility interfaces, such as:
- Portable freestanding implementation of the C standard library (include/halfive/h5stdlib.h)
- Portable coroutine-esque utilities (include/halfive/h5cr.h)
- H5DOC (Packet/Circuit) generic tokenizer (include/halfive/h5doc/h5doc.h)
- Packet/Circuit data structures and tokenizer (WIP) (include/halfive/h5doc/h5net.h) (include/halfive/h5doc/h5t.h)
- Portable VM with custom instruciton set,  and assembly language (include/halfive/h5vm/h5vm.h) (include/halfive/h5vm/h5asm.h)
- Portable abstraction over graphics, sound, and input backends (include/halfive/h5vi.h)
- Portable utilities for working with rational numbers (include/halfive/rat.h)
- Portable utilities for handling mathematical operations (include/halfive/h5math.h)
- Portable RPG battle simulator and prototypes (WIP) (include/halfive/h5rpg.h) (include/halfive/h5rpg_proto.h)
- Portable declarative physics engine (WIP) (include/halfive/h5phy.h)

List of specifications and corresponding mime types:
	Encoding formats:
		Halfive Document (H5DOC)
			- text/h5doc

	Domain-specific data formats:
		Halfive Network (H5NET)
			- text/h5net
		Halfive Track (H5T)
			- text/h5t

	General-purpose tools:
		Halfive Virtual Machine (H5VM)
			- text/h5asm
			- application/h5bin
			- application/h5drive
		Halfive Eloquent Lisp (H5Elq)
			- text/h5elq
		Halfive Pixel Format (H5PIX)
			- application/h5pix


If you read all specifications in the docs, you should be able to:
 - Use H5NET as a basic communications standard
 - Use H5T as a basic format for circuits
 - Use H5VM as a basic runtime for user-generated content

To make them extensions easily trackable, I recommend specifying inside them an 8-character alphanumerical name (underscore hyphen 0-9 A-Z a-z, e.g "_My-Ext2").


--- Licensing ---
The whole project is released under the COIL license, as well as all *original* assets/code. Please see each file for individual licensing information, however.
